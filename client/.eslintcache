[{"E:\\Delectable Recipes\\client\\src\\index.js":"1","E:\\Delectable Recipes\\client\\src\\App.js":"2","E:\\Delectable Recipes\\client\\src\\pages\\RecipeDetailsPage.js":"3","E:\\Delectable Recipes\\client\\src\\components\\Header.js":"4","E:\\Delectable Recipes\\client\\src\\pages\\LandingPage.js":"5","E:\\Delectable Recipes\\client\\src\\context\\recipes\\RecipeState.js":"6","E:\\Delectable Recipes\\client\\src\\context\\recipes\\recipeContext.js":"7","E:\\Delectable Recipes\\client\\src\\components\\RecipeGroup.js":"8","E:\\Delectable Recipes\\client\\src\\types.js":"9","E:\\Delectable Recipes\\client\\src\\context\\recipes\\recipeReducer.js":"10","E:\\Delectable Recipes\\client\\src\\components\\RecipeCard.js":"11","E:\\Delectable Recipes\\client\\src\\DelectableRecipes.js":"12","E:\\Delectable Recipes\\client\\src\\context\\user\\UserState.js":"13","E:\\Delectable Recipes\\client\\src\\context\\user\\userContext.js":"14","E:\\Delectable Recipes\\client\\src\\context\\user\\userReducer.js":"15","E:\\Delectable Recipes\\client\\src\\components\\PrivateRoute.js":"16","E:\\Delectable Recipes\\client\\src\\pages\\LoginPage.js":"17","E:\\Delectable Recipes\\client\\src\\pages\\MyAccountPage.js":"18","E:\\Delectable Recipes\\client\\src\\pages\\RecipesPage.js":"19","E:\\Delectable Recipes\\client\\src\\pages\\RecipeCreatePage.js":"20","E:\\Delectable Recipes\\client\\src\\pages\\MyAccountEditPage.js":"21","E:\\Delectable Recipes\\client\\src\\pages\\MyRecipesPage.js":"22","E:\\Delectable Recipes\\client\\src\\pages\\PageNotFound.js":"23"},{"size":274,"mtime":1609117726312,"results":"24","hashOfConfig":"25"},{"size":368,"mtime":1610315516195,"results":"26","hashOfConfig":"25"},{"size":3705,"mtime":1610315516230,"results":"27","hashOfConfig":"25"},{"size":2386,"mtime":1610315516198,"results":"28","hashOfConfig":"25"},{"size":3157,"mtime":1610315516218,"results":"29","hashOfConfig":"25"},{"size":1469,"mtime":1610315516203,"results":"30","hashOfConfig":"25"},{"size":115,"mtime":1609117726152,"results":"31","hashOfConfig":"25"},{"size":390,"mtime":1609117726150,"results":"32","hashOfConfig":"25"},{"size":897,"mtime":1610315516235,"results":"33","hashOfConfig":"25"},{"size":557,"mtime":1610315516211,"results":"34","hashOfConfig":"25"},{"size":1014,"mtime":1610315516201,"results":"35","hashOfConfig":"25"},{"size":2054,"mtime":1610315516196,"results":"36","hashOfConfig":"25"},{"size":2604,"mtime":1610315516213,"results":"37","hashOfConfig":"25"},{"size":111,"mtime":1610315516214,"results":"38","hashOfConfig":"25"},{"size":1304,"mtime":1610315516215,"results":"39","hashOfConfig":"25"},{"size":499,"mtime":1610315516199,"results":"40","hashOfConfig":"25"},{"size":2162,"mtime":1610315516219,"results":"41","hashOfConfig":"25"},{"size":1265,"mtime":1610315516225,"results":"42","hashOfConfig":"25"},{"size":2583,"mtime":1610315516258,"results":"43","hashOfConfig":"25"},{"size":145,"mtime":1610315516228,"results":"44","hashOfConfig":"25"},{"size":149,"mtime":1610315516224,"results":"45","hashOfConfig":"25"},{"size":131,"mtime":1610315516227,"results":"46","hashOfConfig":"25"},{"size":585,"mtime":1610315516227,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"v72o51",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"E:\\Delectable Recipes\\client\\src\\index.js",[],["103","104"],"E:\\Delectable Recipes\\client\\src\\App.js",[],"E:\\Delectable Recipes\\client\\src\\pages\\RecipeDetailsPage.js",["105"],"import React, { useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\r\nimport RecipeContext from '../context/recipes/recipeContext';\r\n\r\nconst RecipeDetailsPage = ({ match }) => {\r\n  const recipeContext = useContext(RecipeContext);\r\n  const {\r\n    recipe,\r\n    recipe: { userName, recipeTitle, recipeImage, ingredients, recipeSteps },\r\n    getSingleRecipe,\r\n  } = recipeContext;\r\n\r\n  const editMediaLink = link => {\r\n    if (link) {\r\n      link = link.replace('watch?v=', 'embed/');\r\n    }\r\n    return link;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSingleRecipe(match.params.id);\r\n  }, [match]);\r\n  return (\r\n    <>\r\n      <Link to='/recipes'>\r\n        <i className='fas fa-arrow-circle-left'></i> Back to Recipes\r\n      </Link>\r\n      <br />\r\n      <br />\r\n      {Object.keys(recipe).length > 0 && (\r\n        <>\r\n          <h1>{recipeTitle}</h1>\r\n          <p className='h5 mt-3 text-muted'>By {userName}</p>\r\n          <Row className='align-items-center  pt-3 pb-4 mt-4'>\r\n            <Col lg={6} md={5}>\r\n              <Image src={recipeImage} fluid className='sm-bot' />\r\n            </Col>\r\n\r\n            <Col lg={4} md={7} className='mb-4'>\r\n              <h2>Ingredients</h2>\r\n              <ListGroup>\r\n                {ingredients &&\r\n                  ingredients.map(ingredient => (\r\n                    <ListGroupItem key={ingredient._id}>\r\n                      {ingredient.amount} {ingredient.ingredient}\r\n                    </ListGroupItem>\r\n                  ))}\r\n              </ListGroup>\r\n            </Col>\r\n\r\n            <Row className='justify-content-center'>\r\n              <Col>\r\n                <ListGroup variant='flush'>\r\n                  {recipeSteps &&\r\n                    recipeSteps.map((step, idx) => (\r\n                      <ListGroupItem\r\n                        key={step._id}\r\n                        className='mx-2 light-shadow'\r\n                      >\r\n                        <p className='lead text-primary'>\r\n                          {idx + 1}. {step.title}\r\n                        </p>\r\n                        <p>{step.directions}</p>\r\n                        {/* Media type can be one of two things: Image or Video. Only show if present */}\r\n                        {step.media !== '' && step.mediaType === 'image' && (\r\n                          <Image src={step.media} fluid />\r\n                        )}\r\n\r\n                        <Col lg={10}>\r\n                          {step.media !== '' && step.mediaType === 'video' && (\r\n                            <div className='iframe-wrapper'>\r\n                              <iframe\r\n                                src={editMediaLink(step.media)}\r\n                                allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture'\r\n                                allowFullScreen={true}\r\n                                width='100%'\r\n                                height='100%'\r\n                                title={`Video for recipe step entitled ${step.title}`}\r\n                              ></iframe>\r\n                            </div>\r\n                          )}\r\n                        </Col>\r\n                        {step.optional !== '' && <p>{step.optional}</p>}\r\n                      </ListGroupItem>\r\n                    ))}\r\n                </ListGroup>\r\n              </Col>\r\n            </Row>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipeDetailsPage;\r\n","E:\\Delectable Recipes\\client\\src\\components\\Header.js",[],"E:\\Delectable Recipes\\client\\src\\pages\\LandingPage.js",["106","107","108"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport RecipeGroup from '../components/RecipeGroup';\r\nimport RecipeContext from '../context/recipes/recipeContext';\r\nimport UserContext from '../context/user/userContext';\r\n\r\nconst LandingPage = () => {\r\n  const recipeContext = useContext(RecipeContext);\r\n  const { recipes, getAllRecipes, loading } = recipeContext;\r\n\r\n  const userContext = useContext(UserContext);\r\n  const { setUserLoggedIn, loggedIn } = userContext;\r\n\r\n  const [recipeQuery, setRecipeQuery] = useState('');\r\n\r\n  useEffect(() => {\r\n    getAllRecipes();\r\n    setUserLoggedIn();\r\n  }, []);\r\n\r\n  const searchRecipes = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className='justify-content-center align-items-center'>\r\n      <Row>\r\n        <Col>\r\n          <Card className='landing-card text-white text-center p-5'>\r\n            <h1 className='display-4'>Wholesum Recipes For All</h1>\r\n            <p className='lead pt-4'>\r\n              Home is where the heart is, but the center of that heart is the\r\n              kitchen and the wonderful food that is prepared and served to\r\n              families of all shapes and sizes.\r\n            </p>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className='pt-4 text-center justify-content-center align-items-center'>\r\n        <p className='px-2'>\r\n          Looking for recipes? Search to see if we have your favorite recipes or\r\n          scroll down to see some of our favorites!\r\n        </p>\r\n      </Row>\r\n\r\n      <Row className='justify-content-center'>\r\n        <Col lg={10} md={8} sm={12}>\r\n          <Form onSubmit={searchRecipes}>\r\n            <Form.Row className='align-items-center'>\r\n              <Col lg={9} sm={8} xs={9}>\r\n                <FormLabel htmlFor='recipeSearchBox' srOnly>\r\n                  Search For Recipes\r\n                </FormLabel>\r\n                <FormControl\r\n                  type='text'\r\n                  placeholder='Enter recipe...'\r\n                  id='recipeSearchBox'\r\n                  onChange={e => setRecipeQuery(e.target.value)}\r\n                ></FormControl>\r\n              </Col>\r\n              <Col lg={3} sm={4} xs={3}>\r\n                <Button variant='primary' type='submit' className='btn-block'>\r\n                  Search\r\n                </Button>\r\n              </Col>\r\n            </Form.Row>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className='mt-4 align-items-center justify-content-center'>\r\n        {loading ? (\r\n          <Spinner animation='border'>\r\n            <span className='sr-only'>Loading...</span>\r\n          </Spinner>\r\n        ) : (\r\n          <RecipeGroup recipes={recipes}></RecipeGroup>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","E:\\Delectable Recipes\\client\\src\\context\\recipes\\RecipeState.js",[],"E:\\Delectable Recipes\\client\\src\\context\\recipes\\recipeContext.js",[],"E:\\Delectable Recipes\\client\\src\\components\\RecipeGroup.js",[],"E:\\Delectable Recipes\\client\\src\\types.js",[],"E:\\Delectable Recipes\\client\\src\\context\\recipes\\recipeReducer.js",["109"],"import {\r\n  GET_ALL_RECIPES_SUCCESS,\r\n  GET_RECIPES_REQUEST,\r\n  GET_SINGLE_RECIPE_REQUEST,\r\n} from '../../types';\r\n\r\nexport default (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_RECIPES_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case GET_ALL_RECIPES_SUCCESS:\r\n      return { ...state, loading: false, recipes: payload };\r\n\r\n    case GET_SINGLE_RECIPE_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        recipe: payload,\r\n      };\r\n    default:\r\n      break;\r\n  }\r\n};\r\n","E:\\Delectable Recipes\\client\\src\\components\\RecipeCard.js",[],"E:\\Delectable Recipes\\client\\src\\DelectableRecipes.js",["110"],"import React, { useContext, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport UserContext from './context/user/userContext';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Header from './components/Header';\r\nimport LandingPage from './pages/LandingPage';\r\nimport RecipeDetailsPage from './pages/RecipeDetailsPage';\r\nimport RecipesPage from './pages/RecipesPage';\r\nimport Login from './pages/LoginPage';\r\nimport MyAccount from './pages/MyAccountPage';\r\nimport RecipeCreatePage from './pages/RecipeCreatePage';\r\nimport MyAccountEditPage from './pages/MyAccountEditPage';\r\nimport MyRecipesPage from './pages/MyRecipesPage';\r\nimport PageNotFound from './pages/PageNotFound';\r\n\r\nconst MainApp = () => {\r\n  const userContext = useContext(UserContext);\r\n  const { setUserLoggedIn } = userContext;\r\n\r\n  useEffect(() => {\r\n    // Check if user previously logged in has jwt in local storage on page load\r\n    setUserLoggedIn();\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Container>\r\n        <main className='py-2'>\r\n          <Switch>\r\n            <Route exact path='/' component={LandingPage} />\r\n            <Route path='/login' component={Login} />\r\n            <Route exact path='/recipes' component={RecipesPage} />\r\n            <PrivateRoute path='/recipes/create' component={RecipeCreatePage} />\r\n            <Route path='/recipes/:id' component={RecipeDetailsPage} />\r\n            <PrivateRoute exact path='/account' component={MyAccount} />\r\n            <PrivateRoute path='/account/edit' component={MyAccountEditPage} />\r\n            <PrivateRoute path='/account/recipes' component={MyRecipesPage} />\r\n            <Route component={PageNotFound} />\r\n          </Switch>\r\n        </main>\r\n      </Container>\r\n      <footer className='text-center lead pt-5 pb-2'>\r\n        Copyright &copy; {new Date().getFullYear()} Delectable Recipes\r\n      </footer>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default MainApp;\r\n","E:\\Delectable Recipes\\client\\src\\context\\user\\UserState.js",[],"E:\\Delectable Recipes\\client\\src\\context\\user\\userContext.js",[],"E:\\Delectable Recipes\\client\\src\\context\\user\\userReducer.js",["111"],"import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT_SUCCESS,\r\n  GET_USER_DATA_FAIL,\r\n  GET_USER_DATA_REQUEST,\r\n  GET_USER_DATA_SUCCESS,\r\n  SET_USER_LOGGED_IN_ON_RELOAD,\r\n} from '../../types';\r\n\r\nexport default (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_USER_DATA_REQUEST:\r\n    case USER_LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case USER_LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loggedIn: true,\r\n        loginError: {},\r\n        jwt: payload.token,\r\n      };\r\n\r\n    case GET_USER_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case SET_USER_LOGGED_IN_ON_RELOAD:\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        jwt: localStorage.getItem('delec_recipe_jwt'),\r\n      };\r\n\r\n    case USER_LOGOUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: {},\r\n        loginError: {},\r\n        loggedIn: false,\r\n        loading: false,\r\n        jwt: null,\r\n      };\r\n\r\n    case GET_USER_DATA_FAIL:\r\n    case USER_LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        loginError: payload,\r\n      };\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n","E:\\Delectable Recipes\\client\\src\\components\\PrivateRoute.js",[],"E:\\Delectable Recipes\\client\\src\\pages\\LoginPage.js",["112"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport FormGroup from 'react-bootstrap/FormGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport UserContext from '../context/user/userContext';\r\n\r\nconst LoginPage = ({ history }) => {\r\n  const userContext = useContext(UserContext);\r\n  const { logInUser, loggedIn, loginError } = userContext;\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const login = e => {\r\n    e.preventDefault();\r\n\r\n    logInUser(email, password);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loggedIn && history.push('/account');\r\n  }, [loggedIn]);\r\n\r\n  return (\r\n    <>\r\n      {loginError.error !== undefined && (\r\n        // <></>\r\n        <Alert variant='danger'>{loginError.error}. Please try again.</Alert>\r\n      )}\r\n      <Row className='justify-content-center'>\r\n        <Col lg={3} md={2}></Col>\r\n        <Col lg={6} md={8}>\r\n          <Form className='mt-3'>\r\n            <FormGroup controlId='email'>\r\n              <FormLabel>Email</FormLabel>\r\n              <FormControl\r\n                type='email'\r\n                placeholder='Enter email...'\r\n                variant={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup controlId='password'>\r\n              <FormLabel>Password</FormLabel>\r\n              <FormControl\r\n                type='password'\r\n                placeholder='Enter password...'\r\n                variant={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n\r\n            <Button variant='secondary' type='button' onClick={e => login(e)}>\r\n              Login\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n        <Col lg={3} md={2}></Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","E:\\Delectable Recipes\\client\\src\\pages\\MyAccountPage.js",["113","114"],"import React, { useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport UserContext from '../context/user/userContext';\r\n\r\nconst MyAccountPage = () => {\r\n  const userContext = useContext(UserContext);\r\n  const {\r\n    getUserInformation,\r\n    user: { name, email },\r\n    loading,\r\n    jwt,\r\n  } = userContext;\r\n\r\n  useEffect(() => {\r\n    jwt !== null && getUserInformation();\r\n  }, [jwt]);\r\n\r\n  return (\r\n    <Row className='justify-content-center'>\r\n      {loading ? (\r\n        <Spinner animation='border'>\r\n          <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <>\r\n          <Row className='p-2'>\r\n            <Col xs={3} className='justify-content-start align-items-center br'>\r\n              <Link to='/account/edit'>Edit Information</Link>\r\n              <br />\r\n              <Link to='/account/recipes'>My Recipes</Link>\r\n            </Col>\r\n            <Col xs={9} className='justify-content-start'>\r\n              <h1>Welcome {name}</h1>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default MyAccountPage;\r\n","E:\\Delectable Recipes\\client\\src\\pages\\RecipesPage.js",["115","116"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport RecipeGroup from '../components/RecipeGroup';\r\nimport RecipeContext from '../context/recipes/recipeContext';\r\nimport UserContext from '../context/user/userContext';\r\n\r\nconst RecipesPage = ({ history }) => {\r\n  const [recipeQuery, setRecipeQuery] = useState('');\r\n\r\n  const recipeContext = useContext(RecipeContext);\r\n  const { recipes, getAllRecipes, loading } = recipeContext;\r\n\r\n  const userContext = useContext(UserContext);\r\n  const { loggedIn } = userContext;\r\n\r\n  useEffect(() => {\r\n    getAllRecipes();\r\n  }, []);\r\n\r\n  const gotoAddRecipe = e => {\r\n    e.preventDefault();\r\n    history.push('/recipes/create');\r\n  };\r\n\r\n  const searchRecipes = () => {};\r\n\r\n  return (\r\n    <>\r\n      <Row className='justify-content-center'>\r\n        <Col lg={10} md={8} sm={12}>\r\n          <Form onSubmit={searchRecipes}>\r\n            <Form.Row className='align-items-center'>\r\n              <Col lg={9} sm={8} xs={9}>\r\n                <FormLabel htmlFor='recipeSearchBox' srOnly>\r\n                  Search For Recipes\r\n                </FormLabel>\r\n                <FormControl\r\n                  type='text'\r\n                  placeholder='Search for recipe...'\r\n                  id='recipeSearchBox'\r\n                  onChange={e => setRecipeQuery(e.target.value)}\r\n                ></FormControl>\r\n              </Col>\r\n              <Col lg={3} sm={4} xs={3}>\r\n                <Button variant='primary' type='submit' className='btn-block'>\r\n                  Search\r\n                </Button>\r\n              </Col>\r\n            </Form.Row>\r\n          </Form>\r\n          {loggedIn && (\r\n            <Button\r\n              onClick={e => gotoAddRecipe(e)}\r\n              className='mt-2'\r\n              variant='info'\r\n            >\r\n              Create Recipe\r\n            </Button>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className='mt-4 align-items-center justify-content-center'>\r\n        {loading ? (\r\n          <Spinner animation='border'>\r\n            <span className='sr-only'>Loading...</span>\r\n          </Spinner>\r\n        ) : (\r\n          <RecipeGroup recipes={recipes}></RecipeGroup>\r\n        )}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipesPage;\r\n","E:\\Delectable Recipes\\client\\src\\pages\\RecipeCreatePage.js",[],"E:\\Delectable Recipes\\client\\src\\pages\\MyAccountEditPage.js",[],"E:\\Delectable Recipes\\client\\src\\pages\\MyRecipesPage.js",[],"E:\\Delectable Recipes\\client\\src\\pages\\PageNotFound.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":27,"column":6,"nodeType":"123","endLine":27,"endColumn":13,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":19,"column":28,"nodeType":"127","messageId":"128","endLine":19,"endColumn":36},{"ruleId":"125","severity":1,"message":"129","line":21,"column":10,"nodeType":"127","messageId":"128","endLine":21,"endColumn":21},{"ruleId":"121","severity":1,"message":"130","line":26,"column":6,"nodeType":"123","endLine":26,"endColumn":8,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":7,"column":1,"nodeType":"134","endLine":26,"endColumn":3},{"ruleId":"121","severity":1,"message":"135","line":24,"column":6,"nodeType":"123","endLine":24,"endColumn":8,"suggestions":"136"},{"ruleId":"132","severity":1,"message":"133","line":12,"column":1,"nodeType":"134","endLine":66,"endColumn":3},{"ruleId":"121","severity":1,"message":"137","line":27,"column":6,"nodeType":"123","endLine":27,"endColumn":16,"suggestions":"138"},{"ruleId":"125","severity":1,"message":"139","line":12,"column":19,"nodeType":"127","messageId":"128","endLine":12,"endColumn":24},{"ruleId":"121","severity":1,"message":"140","line":19,"column":6,"nodeType":"123","endLine":19,"endColumn":11,"suggestions":"141"},{"ruleId":"125","severity":1,"message":"129","line":14,"column":10,"nodeType":"127","messageId":"128","endLine":14,"endColumn":21},{"ruleId":"121","severity":1,"message":"142","line":24,"column":6,"nodeType":"123","endLine":24,"endColumn":8,"suggestions":"143"},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSingleRecipe'. Either include it or remove the dependency array.","ArrayExpression",["146"],"no-unused-vars","'loggedIn' is assigned a value but never used.","Identifier","unusedVar","'recipeQuery' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllRecipes' and 'setUserLoggedIn'. Either include them or remove the dependency array.",["147"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'setUserLoggedIn'. Either include it or remove the dependency array.",["148"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["149"],"'email' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserInformation'. Either include it or remove the dependency array.",["150"],"React Hook useEffect has a missing dependency: 'getAllRecipes'. Either include it or remove the dependency array.",["151"],"no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [getSingleRecipe, match]",{"range":"164","text":"165"},"Update the dependencies array to be: [getAllRecipes, setUserLoggedIn]",{"range":"166","text":"167"},"Update the dependencies array to be: [setUserLoggedIn]",{"range":"168","text":"169"},"Update the dependencies array to be: [history, loggedIn]",{"range":"170","text":"171"},"Update the dependencies array to be: [getUserInformation, jwt]",{"range":"172","text":"173"},"Update the dependencies array to be: [getAllRecipes]",{"range":"174","text":"175"},[843,850],"[getSingleRecipe, match]",[984,986],"[getAllRecipes, setUserLoggedIn]",[1052,1054],"[setUserLoggedIn]",[898,908],"[history, loggedIn]",[541,546],"[getUserInformation, jwt]",[912,914],"[getAllRecipes]"]